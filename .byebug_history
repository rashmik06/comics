c
params
continue
params
continue
params
c
params
review_params
continue
@review
params
continue
@com
params
continue
params
c
@com.where(email:@email)
@com
c
@email
continue
com
c
continue
c
continue
c
@email == c.email ?
params[:review][:email]
@email
params
c
c.email.present?
c
params[:review][:email]
params
c
params
c
@review
@comicbook
params
c
params
c
params
c
continue
c
params[:id]
params[:comicbook_id]
params
c
params
c
params[:comicbook_id]
review_params
params
c
params
c
params
param
c
params[:comicbook_id]
@comicbook
params
c
@comicbook
params
c
params
c
params[:id]
params
c
pub.id
@publishers
@publisher
publisher
params[:page]
params
c
@comicbook.errors
@comicbook
c
@comicbook.errors
@comicbook.valid?
c
@comicbook
params
c
@comicbook
params
continue
c
q
c
pub
c
continue
c
@publishers.find(2).image.attached?
@publishers.last.image.attached?
@publishers.first.image.attached?
@publishers
c
@publisher
c
@publisher
@publisher.save
@publisher.image = { io: StringIO.new(decoded_data),content_type: 'image/jpeg',filename: 'image.jpg'}
  filename: 'image.jpg'
  content_type: 'image/jpeg',
  io: StringIO.new(decoded_data),
@publisher.image = { 
decoded_data = Base64.decode64(params[:publisher][:image].first.split(',')[1])
decoded_data = Base64.decode64(params[:base64].split(',')[1])
params[:publisher][:image]
c
params[:publisher][:image]
@publisher.image.attach(io: StringIO.new(Base64.decode64(params[:publisher][:image])), content_type: 'image/jpeg', filename: 'image.jpeg')
@publisher.image.attach(io: StringIO.new(Base64.decode64(params[:publisher][:image].split(',')[1])), content_type: 'image/jpeg', filename: 'image.jpeg')
@publisher.image.attach(data:params[:publisher][:image])
params[:publisher][:image]
c
@publisher.image.attach(io: StringIO.new(Base64.decode64(params[:publisher][:image].split(',')[1])), content_type: 'image/jpeg', filename: 'image.jpeg')
@publisher.image.attach(data:params[:publisher][:image], filename: 'your_filename', content_type: 'image/jpeg', identify: 'false')
@publisher.image.attach(data:params[:publisher][:image], filename: 'your_filename', content_type: 'content/type', identify: 'false')
c
@publisher.image.attach(data:params[:publisher][:image], filename: 'f1', content_type: 'image/jpeg', identify: 'false')
@publisher.image.attach(data:params[:publisher][:image], filename: 'your_filename', content_type: 'content/type', identify: 'false')
continue
@publisher.image.attached?
@publisher.image = { data: params[:image] }
@publisher.update(publisher_params)
@publisher
params
continue
@publisher.image.attach(data: params[:publisher][:image])
publisher_params
c
@publisher.image.attach(params[:publisher][:image])
@publisher.image.attach(data: params[:publisher][:image])
@publisher.save
@publisher.image = {data: params[:publisher][:image]}
params[:publisher][:image]
params[:image]
@publisher.image = {data: params[:image]}
@publisher.update(publisher_params)
@publisher.image.attach(data: params[:image])
c
@publisher.image.attach(data: params[:image])
params
publisher_params
c
@comicbook
c
Comicbook.where("title LIKE ?", "%#{"li"}%")
Comicbook.where("title LIKE ?", "%#{"re"}%")
Comicbook.all
Comicbook.where("title LIKE ?", "%#{search}%")
continue
@comicbook
params
continue
Comicbook.where("title LIKE ?", "%#{params[:life]}%")
params[:life]
params
continue
%#{params[:life]}%
@commicbook
params[:life]
